# vim:fileencoding=utf-8:foldmethod=marker

#: Fonts {{{

# Options from: kitty list-fonts

# font_family      MesloLGS NF
# italic_font      auto
# bold_font        auto
# bold_italic_font auto

font_family        Fira Code Retina
italic_font        auto
bold_font          auto
bold_italic_font   auto

font_size 16

adjust_line_height  -2
adjust_column_width 0
adjust_baseline 4

disable_ligatures never

# : }}}

# : Cursor customization {{{

cursor #cccccc
cursor_text_color #111111

# options: (block, beam, underline)
cursor_shape beam
cursor_beam_thickness 2
cursor_stop_blinking_after 30.0

#: }}}

#: Scrollback {{{

scrollback_lines 4096
wheel_scroll_multiplier 5.0
touch_scroll_multiplier 2.5

#: }}}

#: Mouse {{{

mouse_hide_wait -1

url_color #ff00ff
url_style single
url_prefixes http https file ftp gemini irc gopher mailto news git

copy_on_select no
strip_trailing_spaces smart
default_pointer_shape beam
pointer_shape_when_grabbed arrow
pointer_shape_when_dragging hand

#: Terminal bell {{{

enable_audio_bell no
visual_bell_duration 1
window_alert_on_bell yes
bell_on_tab yes

#: }}}

#: Window layout {{{

remember_window_size  yes
# option: fat,tall,grid,stack,splits,vertical,horizontal
enabled_layouts *

active_border_color #7fff00
inactive_border_color #a9a9a9
bell_border_color #ff5a00
inactive_text_alpha 0.6
confirm_os_window_close 1

#: }}}

#: Tab bar {{{

tab_bar_edge top

#: Which edge to show the tab bar on, top or bottom

# tab_bar_margin_width 0.0

#: The margin to the left and right of the tab bar (in pts)

# tab_bar_margin_height 0.0 0.0

#: The margin above and below the tab bar (in pts). The first number
#: is the margin between the edge of the OS Window and the tab bar and
#: the second number is the margin between the tab bar and the
#: contents of the current tab.

tab_bar_style powerline

#: The tab bar style, can be one of:

#: fade
#:     Each tab's edges fade into the background color (see tab_fade)
#: slant
#:     Tabs look like the tabs in a physical file
#: separator
#:     Tabs are separated by a configurable separator (see tab_separator)
#: powerline
#:     Tabs are shown as a continuous line with "fancy" separators (see tab_powerline_style)
#: hidden
#:     The tab bar is hidden. If you use this, you might want to create a mapping
#:     for the https://sw.kovidgoyal.net/kitty/actions/#select-tab action which presents you with a list
#:     of tabs and allows for easy switching to a tab.

tab_bar_min_tabs 2

#: The minimum number of tabs that must exist before the tab bar is
#: shown

# tab_switch_strategy previous

#: The algorithm to use when switching to a tab when the current tab
#: is closed. The default of previous will switch to the last used
#: tab. A value of left will switch to the tab to the left of the
#: closed tab. A value of right will switch to the tab to the right of
#: the closed tab. A value of last will switch to the right-most tab.

# tab_fade 0.25 0.5 0.75 1

#: Control how each tab fades into the background when using fade for
#: the tab_bar_style. Each number is an alpha (between zero and one)
#: that controls how much the corresponding cell fades into the
#: background, with zero being no fade and one being full fade. You
#: can change the number of cells used by adding/removing entries to
#: this list.

# tab_separator " â”‡"

#: The separator between tabs in the tab bar when using separator as
#: the tab_bar_style.

tab_powerline_style angled

#: The powerline separator style between tabs in the tab bar when
#: using powerline as the tab_bar_style, can be one of: angled,
#: slanted, or round.

# tab_activity_symbol none

#: Some text or a unicode symbol to show on the tab if a window in the
#: tab that does not have focus has some activity. If you want to use
#: leading or trailing spaces surround the text with quotes.

tab_title_template "{index} {layout_name}[{num_window_groups}]"

#: A template to render the tab title. The default just renders the
#: title. If you wish to include the tab-index as well, use something
#: like: {index}: {title}. Useful if you have shortcuts mapped for
#: goto_tab N. If you prefer to see the index as a superscript, use
#: {sup.index}. In addition you can use {layout_name} for the current
#: layout name, {num_windows} for the number of windows in the tab and
#: {num_window_groups} for the number of window groups (not counting
#: overlay windows) in the tab. Note that formatting is done by
#: Python's string formatting machinery, so you can use, for instance,
#: {layout_name[:2].upper()} to show only the first two letters of the
#: layout name, upper-cased. If you want to style the text, you can
#: use styling directives, for example:
#: {fmt.fg.red}red{fmt.fg.default}normal{fmt.bg._00FF00}green
#: bg{fmt.bg.normal}. Similarly, for bold and italic:
#: {fmt.bold}bold{fmt.nobold}normal{fmt.italic}italic{fmt.noitalic}.

active_tab_title_template none

#: Template to use for active tabs, if not specified falls back to
#: tab_title_template.

# active_tab_foreground   #eee
# active_tab_background   #000
# active_tab_font_style   bold-italic
inactive_tab_foreground #999
inactive_tab_background #444
# inactive_tab_font_style normal

#: Tab bar colors and styles

# tab_bar_background none

#: Background color for the tab bar. Defaults to using the terminal
#: background color.

#: }}}

#: Color scheme {{{

# BEGIN_KITTY_THEME
# Solarized Dark
include current-theme.conf
# END_KITTY_THEME

background_opacity 0.95
dynamic_background_opacity yes

#: }}}

#: Advanced {{{

env USE_KITTY=true
startup_session none
clipboard_control write-clipboard write-primary read-clipboard
clipboard_max_size 64
allow_hyperlinks yes

#: }}}

#: Shell Integration {{{

shell_integration enabled
map kitty_mod+g show_last_command_output

#: }}}

#: OS specific tweaks {{{

macos_option_as_alt left
macos_quit_when_last_window_closed yes
macos_window_resizable yes
macos_thicken_font 0.2
macos_traditional_fullscreen no
macos_show_window_title_in none
macos_custom_beam_cursor no

#: }}}

#: Keyboard shortcuts {{{

#: Doc for names:
#: https://sw.kovidgoyal.net/kitty/keyboard-protocol/#functional-key-definitions
#
#: example
#:     map kitty_mod+space no_op
#:     map key combine <separator> action1 <separator> action2 <separator> action3 ...
#:     map key1>key2>key3 action
#
#: aliases for kitten names,
#: kitten_alias hints hints --hints-offset=0

kitty_mod super+shift
clear_all_shortcuts yes

#: Clipboard {{{

map super+c copy_to_clipboard
map super+v paste_from_clipboard
map kitty_mod+c copy_to_clipboard
map kitty_mod+v paste_from_clipboard

# map kitty_mod+s paste_from_selection
# map kitty_mod+o pass_selection_to_program
# map kitty_mod+o pass_selection_to_program firefox
# map kitty_mod+y new_window less @selection
#: }}}

#: Scrolling {{{

map kitty_mod+up        scroll_line_up
map kitty_mod+down      scroll_line_down
map kitty_mod+page_up   scroll_page_up
map kitty_mod+page_down scroll_page_down
map kitty_mod+home      scroll_home
map kitty_mod+end       scroll_end

# NOTE: https://github.com/kovidgoyal/kitty/issues/719
scrollback_pager ~/.config/kitty/pager.sh 'INPUT_LINE_NUMBER' 'CURSOR_LINE' 'CURSOR_COLUMN'
map super+/ launch --type overlay --stdin-add-formatting --stdin-source=@screen_scrollback ~/.config/kitty/pager.sh

#: }}}

#: Window management {{{

map kitty_mod+n new_os_window
map kitty_mod+enter new_window
map kitty_mod+d close_window
map kitty_mod+w close_window
map super+w>q close_window

map kitty_mod+f toggle_fullscreen
map kitty_mod+m toggle_maximized
map kitty_mod+r start_resizing_window

map super+enter new_window_with_cwd


map super+w>h neighboring_window left
map super+w>j neighboring_window down
map super+w>l neighboring_window right
map super+w>k neighboring_window up
map super+] next_window
map super+[ previous_window

map super+w>shift+h move_window left
map super+w>shift+j move_window down
map super+w>shift+l move_window right
map super+w>shift+k move_window up
map super+w>left move_window left
map super+w>down move_window down
map super+w>right move_window right
map super+w>up move_window up

map super+w>f move_window_forward
map super+w>b move_window_backward
map super+w>t move_window_to_top

map super+w>1 first_window
map super+w>2 second_window
map super+w>3 third_window
map super+w>4 fourth_window
map super+w>5 fifth_window
map super+w>6 sixth_window
map super+w>7 seventh_window
map super+w>8 eighth_window
map super+w>9 ninth_window
map super+w>0 tenth_window

map super+a first_window
map super+s second_window
map super+d third_window

#: }}}

#: Tab management {{{

map kitty_mod+t     new_tab
map kitty_mod+w     close_tab
map kitty_mod+q     close_os_window

map kitty_mod+l next_tab
map kitty_mod+h  previous_tab
map kitty_mod+y  select_tab
# map kitty_mod+.     move_tab_forward
# map kitty_mod+,     move_tab_backward
# map kitty_mod+alt+t set_tab_title
#: }}}

#: Layout management {{{

map super+l>n next_layout
map super+l>b last_used_layout
map super+l>l toggle_layout stack

map super+l>f goto_layout fat
map super+l>t goto_layout tall
map super+l>g goto_layout grid
map super+l>s goto_layout stack
map super+l>p goto_layout splits
map super+l>v goto_layout vertial
map super+l>h goto_layout horizontal

#: }}}

#: Font sizes {{{

map kitty_mod+equal     change_font_size all +2.0
map kitty_mod+minus     change_font_size all -2.0
map kitty_mod+0         change_font_size all 0

#: }}}

#: Marker {{{
mark1_foreground black
mark1_background #dc143c
mark2_foreground black
mark2_background #ff8c00
mark3_foreground black
mark3_background #f274bc

map kitty_mod+k>c        create_marker
map kitty_mod+k>d        remove_marker
map kitty_mod+k>e        toggle_marker itext 1 ERROR
map kitty_mod+k>shift+e  toggle_marker text 1 ERROR
map kitty_mod+k>w        toggle_marker itext 2 WARNING
map kitty_mod+k>shift+w  toggle_marker text 2 WARNING

#: }}}

#: Select and act on visible text {{{

#: Use the hints kitten to select text and either pass it to an
#: external program or insert it into the terminal or copy it to the
#: clipboard.

map kitty_mod+p>u open_url_with_hints

#: Open a currently visible URL using the keyboard. The program used
#: to open the URL is specified in open_url_with.

map kitty_mod+p>f kitten hints --type path --program @
map kitty_mod+p>shift+f kitten hints --type path --program -

#: Select a path/filename and insert it into the terminal. Useful, for
#: instance to run git commands on a filename output from a previous
#: git command.

map kitty_mod+p>o kitten hints --type path

#: Select a path/filename and open it with the default open program.

map kitty_mod+p>l kitten hints --type line --program @
map kitty_mod+p>shift+l kitten hints --type line --program -

#: Select a line of text and insert it into the terminal. Use for the
#: output of things like: ls -1

map kitty_mod+p>w kitten hints --type word --program @
map kitty_mod+p>shift+w kitten hints --type word --program -

#: Select words and insert into terminal.

map kitty_mod+p>h kitten hints --type hash --program @
map kitty_mod+p>shift+h kitten hints --type hash --program -

#: Select something that looks like a hash and insert it into the
#: terminal. Useful with git, which uses sha1 hashes to identify
#: commits

map kitty_mod+p>n kitten hints --type linenum

#: Select something that looks like filename:linenum and open it in
#: vim at the specified line number.

map kitty_mod+p>y kitten hints --type hyperlink

#: Select a hyperlink (i.e. a URL that has been marked as such by the
#: terminal program, for example, by ls --hyperlink=auto).


#: The hints kitten has many more modes of operation that you can map
#: to different shortcuts. For a full description see kittens/hints.
#: }}}

#: Miscellaneous {{{

map kitty_mod+u      kitten unicode_input
map super+,          edit_config_file
map kitty_mod+escape kitty_shell window

#: Open the kitty shell in a new window/tab/overlay/os_window to
#: control kitty using commands.

map kitty_mod+a>m    set_background_opacity +0.1
map kitty_mod+a>l    set_background_opacity -0.1
map kitty_mod+a>1    set_background_opacity 1
map kitty_mod+a>d    set_background_opacity default
map kitty_mod+delete clear_terminal reset active

#: You can create shortcuts to clear/reset the terminal. For example::

#:     # Reset the terminal
map kitty_mod+a>r clear_terminal reset active
map kitty_mod+a>shift+r clear_terminal reset all
#:     # Clear the terminal screen by erasing all contents
map kitty_mod+a>c clear_terminal clear active
map kitty_mod+a>shift+c clear_terminal clear all
#:     # Clear the terminal scrollback by erasing it
#:     map kitty_mod+f11 clear_terminal scrollback active
#:     # Scroll the contents of the screen into the scrollback
#:     map kitty_mod+f12 clear_terminal scroll active

map kitty_mod+,  load_config_file
map ctrl+super+, debug_config

#: You can tell kitty to send arbitrary (UTF-8) encoded text to the
#: client program when pressing specified shortcut keys. For example::

#:     map ctrl+alt+a send_text all Special text

#: This will send "Special text" when you press the ctrl+alt+a key
#: combination.  The text to be sent is a python string literal so you
#: can use escapes like \x1b to send control codes or \u21fb to send
#: unicode characters (or you can just input the unicode characters
#: directly as UTF-8 text). The first argument to send_text is the
#: keyboard modes in which to activate the shortcut. The possible
#: values are normal or application or kitty or a comma separated
#: combination of them.  The special keyword all means all modes. The
#: modes normal and application refer to the DECCKM cursor key mode
#: for terminals, and kitty refers to the special kitty extended
#: keyboard protocol.

#: Another example, that outputs a word and then moves the cursor to
#: the start of the line (same as pressing the Home key)::

#:     map ctrl+alt+a send_text normal Word\x1b[H
#:     map ctrl+alt+a send_text application Word\x1bOH

#: }}}

#: }}}

# Tail a log file (*.log) in a new OS Window and reduce its font size
protocol file
ext log
action launch --title ${FILE} --type=os-window tail -f ${FILE_PATH}
